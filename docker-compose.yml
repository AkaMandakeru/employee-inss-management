version: '3.8'

services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: credishop_test_development
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build: .
    ports:
      - "3000:80"
    environment:
      RAILS_ENV: production
      DATABASE_URL: postgresql://postgres:password@db:5432/credishop_test_development
      REDIS_URL: redis://redis:6379/0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./storage:/rails/storage
      - ./log:/rails/log
    restart: unless-stopped

  worker:
    build: .
    command: ["./bin/rails", "jobs:work"]
    environment:
      RAILS_ENV: production
      DATABASE_URL: postgresql://postgres:password@db:5432/credishop_test_development
      REDIS_URL: redis://redis:6379/0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./storage:/rails/storage
      - ./log:/rails/log
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
